on:
  push:
    branches:
      - master

jobs:
  upload_to_sftp:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Upload DutyLogs-Script Artifact
        uses: actions/upload-artifact@v1
        with:
          name: DutyLogs-Script.zip
          path: script

      - name: Remove script directory
        run: rm -r script

      - name: Remove Unneeded Files
        run: rm -rf .gitignore; rm -rf .gitattributes; rm -r .github; rm -r .git; rm -rf CONTRIBUTING.md; rm -rf README.md; rm -rf LICENSE;

      - name: Upload DutyLogs-Bot Artifact
        uses: actions/upload-artifact@v1
        with:
          name: DutyLogs-Bot.zip
          path: Host-Your-Own-Bot

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}-${{ github.run_id }}
          release_name: Latest
          body: Automated release
          draft: false
          prerelease: false

      - name: Create Folder
        run: |
          mkdir -p ${{ github.workspace }}/artifact

      - name: Download DutyLogs-Script Artifact
        uses: actions/download-artifact@v1
        with:
          name: DutyLogs-Script.zip
          path: ${{ github.workspace }}/artifact/script

      - name: Download DutyLogs-Bot Artifact
        uses: actions/download-artifact@v1
        with:
          name: DutyLogs-Bot.zip
          path: ${{ github.workspace }}/artifact/bot
      - name: Check Files
        run: cd ${{ github.workspace }}/artifact; ls

      - name: Zip Downloads
        run: |
          cd ${{ github.workspace }}/artifact
          cd bot
          zip -r bot.zip .
          cd ../script
          zip -r script.zip .
      - name: Attach Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifact/script/script.zip
          asset_name: DutyLogs-Script.zip
          asset_content_type: application/zip

      - name: Attach Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifact/bot/bot.zip
          asset_name: DutyLogs-Bot.zip
          asset_content_type: application/zip

      - name: Prepare SFTP Upload Bot
        run: |
          cd ./Host-Your-Own-Bot
          rm -rf INSTALLME.sql
          
      - name: SFTP Upload Bot
        uses: Lauweal/sftp-deploy-action@v1.0.4
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: ${{ secrets.SFTP_PORT }}
          local: /Host-Your-Own-Bot
          remote: /

      - name: Restart Server
        run: |
          curl "https://panel.jordan2139.me/api/client/servers/${{ secrets.API_SERVER_ID }}/power" -H "Accept: application/json" -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" -X POST -b "pterodactyl_session=${{ secrets.PANEL_SESSION_TOKEN }}" -d '{"signal": "restart"}'
          
      - name: test
        run: ls
        
      - name: SFTP Upload Script
        uses: Lauweal/sftp-deploy-action@v1.0.4
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME_SCRIPT }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: ${{ secrets.SFTP_PORT }}
          local: /script
          remote: /resources/[DEMO]/ondutylogs
